{"ast":null,"code":"import _slicedToArray from\"/home/origummy/src/7th-of-october/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useContext,createContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var ContentContext=/*#__PURE__*/createContext(true);var Content=function Content(props){var src=props.src;var details=props.details;var _useState=useState(\"undefined\"),_useState2=_slicedToArray(_useState,2),contentType=_useState2[0],setContentType=_useState2[1];var isBlurred=useContext(ContentContext);useEffect(function(){var getContentType=function getContentType(path){var videoTypes=[\"mkv\",\"mov\",\"mp4\",\"webv\"];var imageTypes=[\"png\",\"jpeg\",\"jpg\",\"webp\"];var fileExtention=path===null||path===void 0?void 0:path.split(\".\").pop();if(fileExtention===undefined){return\"undefined\";}else if(videoTypes.includes(fileExtention)){return\"video\";}else if(imageTypes.includes(fileExtention)){return\"image\";}return\"\";};setContentType(getContentType(src));});if(contentType===\"video\"){return/*#__PURE__*/_jsx(\"video\",{controls:true,loop:true,autoPlay:true,id:\"graphic\",style:isBlurred?{\"filter\":\"blur(2vmin) brightness(80%)\"}:{},children:/*#__PURE__*/_jsx(\"source\",{src:src,type:\"video/mp4\"})},src);}else if(contentType===\"image\"){return/*#__PURE__*/_jsx(\"img\",{src:src,id:\"graphic\",alt:details,style:isBlurred?{\"filter\":\"blur(2vmin) brightness(80%)\"}:{}});}return/*#__PURE__*/_jsx(\"div\",{children:\"Media could not be loaded.\"});};export var Context=ContentContext;export default Content;","map":{"version":3,"names":["React","useState","useEffect","useContext","createContext","jsx","_jsx","ContentContext","Content","props","src","details","_useState","_useState2","_slicedToArray","contentType","setContentType","isBlurred","getContentType","path","videoTypes","imageTypes","fileExtention","split","pop","undefined","includes","controls","loop","autoPlay","id","style","children","type","alt","Context"],"sources":["/home/origummy/src/7th-of-october/src/components/Content.tsx"],"sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\n\nconst ContentContext = createContext(true);\n\n\nexport interface ContentProps {\n    src: string;\n    details: string;\n    children?: JSX.Element | JSX.Element[];\n}\n\nconst Content = (props: ContentProps) => {\n    const src: string = props.src;\n    const details: string = props.details;\n\n    const [contentType, setContentType] = useState(\"undefined\");\n    const isBlurred = useContext(ContentContext);\n\n    useEffect(() => {\n        const getContentType = (path: string | undefined) => {\n            const videoTypes: string[] = [\"mkv\", \"mov\", \"mp4\", \"webv\"];\n            const imageTypes: string[] = [\"png\", \"jpeg\", \"jpg\", \"webp\"];\n            const fileExtention = path?.split(\".\").pop();\n\n            if (fileExtention === undefined) {\n                return \"undefined\";\n            } else if (videoTypes.includes(fileExtention)) {\n                return \"video\";\n            } else if (imageTypes.includes(fileExtention)) {\n                return \"image\";\n            }\n\n            return \"\";\n        };\n\n        setContentType(getContentType(src));\n    });\n\n    if (contentType === \"video\") {\n        return (\n            <video controls loop autoPlay id=\"graphic\" key={src} style={isBlurred ? {\"filter\": \"blur(2vmin) brightness(80%)\"} : {}}>\n                <source src={src} type=\"video/mp4\" />\n            </video>\n        );\n    } else if (contentType === \"image\") {\n        return <img src={src} id=\"graphic\" alt={details} style={isBlurred ? {\"filter\": \"blur(2vmin) brightness(80%)\"} : {}}/>;\n    }\n\n    return <div>Media could not be loaded.</div>;\n};\n\nexport const Context = ContentContext;\nexport default Content;\n"],"mappings":"uHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,CAAEC,aAAa,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,GAAM,CAAAC,cAAc,cAAGH,aAAa,CAAC,IAAI,CAAC,CAS1C,GAAM,CAAAI,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,KAAmB,CAAK,CACrC,GAAM,CAAAC,GAAW,CAAGD,KAAK,CAACC,GAAG,CAC7B,GAAM,CAAAC,OAAe,CAAGF,KAAK,CAACE,OAAO,CAErC,IAAAC,SAAA,CAAsCX,QAAQ,CAAC,WAAW,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAApDG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAClC,GAAM,CAAAI,SAAS,CAAGd,UAAU,CAACI,cAAc,CAAC,CAE5CL,SAAS,CAAC,UAAM,CACZ,GAAM,CAAAgB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,IAAwB,CAAK,CACjD,GAAM,CAAAC,UAAoB,CAAG,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAE,MAAM,CAAC,CAC1D,GAAM,CAAAC,UAAoB,CAAG,CAAC,KAAK,CAAE,MAAM,CAAE,KAAK,CAAE,MAAM,CAAC,CAC3D,GAAM,CAAAC,aAAa,CAAGH,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAE5C,GAAIF,aAAa,GAAKG,SAAS,CAAE,CAC7B,MAAO,WAAW,CACtB,CAAC,IAAM,IAAIL,UAAU,CAACM,QAAQ,CAACJ,aAAa,CAAC,CAAE,CAC3C,MAAO,OAAO,CAClB,CAAC,IAAM,IAAID,UAAU,CAACK,QAAQ,CAACJ,aAAa,CAAC,CAAE,CAC3C,MAAO,OAAO,CAClB,CAEA,MAAO,EAAE,CACb,CAAC,CAEDN,cAAc,CAACE,cAAc,CAACR,GAAG,CAAC,CAAC,CACvC,CAAC,CAAC,CAEF,GAAIK,WAAW,GAAK,OAAO,CAAE,CACzB,mBACIT,IAAA,UAAOqB,QAAQ,MAACC,IAAI,MAACC,QAAQ,MAACC,EAAE,CAAC,SAAS,CAAWC,KAAK,CAAEd,SAAS,CAAG,CAAC,QAAQ,CAAE,6BAA6B,CAAC,CAAG,CAAC,CAAE,CAAAe,QAAA,cACnH1B,IAAA,WAAQI,GAAG,CAAEA,GAAI,CAACuB,IAAI,CAAC,WAAW,CAAE,CAAC,EADOvB,GAEzC,CAAC,CAEhB,CAAC,IAAM,IAAIK,WAAW,GAAK,OAAO,CAAE,CAChC,mBAAOT,IAAA,QAAKI,GAAG,CAAEA,GAAI,CAACoB,EAAE,CAAC,SAAS,CAACI,GAAG,CAAEvB,OAAQ,CAACoB,KAAK,CAAEd,SAAS,CAAG,CAAC,QAAQ,CAAE,6BAA6B,CAAC,CAAG,CAAC,CAAE,CAAC,CAAC,CACzH,CAEA,mBAAOX,IAAA,QAAA0B,QAAA,CAAK,4BAA0B,CAAK,CAAC,CAChD,CAAC,CAED,MAAO,IAAM,CAAAG,OAAO,CAAG5B,cAAc,CACrC,cAAe,CAAAC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}